1 - valid query (zero clause)
assign a;
Select a
1, 6, 7, 8
5000
2 - valid query (zero clause)
assign a123;
Select a123
1, 6, 7, 8
5000
3 - valid query (zero clause)
constant c;
Select c
1, 2, 10, 1000, 40231
5000
4 - valid query (zero clause)
constant const12;
Select const12
1, 2, 10, 1000, 40231
5000
5 - valid query (zero clause)
prog_line pl;
Select pl
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
6 - valid query (zero clause)
prog_line pl4;
Select pl4
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
7 - valid query (zero clause)
stmt statement;
Select statement
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
8 - valid query (zero clause)
stmt statement1;
Select statement1
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
9 - valid query (zero clause)
procedure p;
Select p
highlight
5000
10 - valid query (zero clause)
procedure proc1;
Select proc1
highlight
5000
11 - valid query (zero clause)
read r;
Select r
2, 3, 5
5000
12 - valid query (zero clause)
read r1;
Select r1
2, 3, 5
5000
13 - valid query (zero clause)
print p;
Select p
4, 9
5000
14 - valid query (zero clause)
print p5;
Select p5
4, 9
5000
15 - valid query (zero clause)
variable v;
Select v
x, y, z, twice, g, gg
5000
16 - valid query (zero clause)
variable v1;
Select v1
x, y, z, twice, g, gg
5000
17 - invalid query (invalid design entity)
printstmt p;
Select p
none
5000
18 - invalid query (invalid synonym: does not start with a letter)
assign 1a;
Select 1a
none
5000
19 - invalid query (invalid synonym: contains special characters)
assign a?;
Select a?
none
5000
20 - invalid query (repeated synonyms declared)
prog_line p; print p;
Select p
none
5000
21 - invalid query (synonym selected is not declared)
constant c;
Select c1
none
5000
22 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = identifier)
assign a;
Select a such that Modifies(8, "gg")
1, 6, 7, 8
5000
23 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = identifier)
constant c;
Select c such that Modifies(1, "x")
1, 2, 10, 1000, 40231
5000
24 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = identifier)
prog_line p1;
Select p1 such that Modifies(5, "twice")
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
25 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = identifier)
procedure p;
Select p such that Modifies(7, "y")
highlight
5000
26 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = identifier)
stmt s1;
Select s1 such that Modifies(6, "z")
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
27 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = identifier)
read r;
Select r such that Modifies(3, "x")
2, 3, 5
5000
28 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = identifier)
print p;
Select p such that Modifies(2, "y")
4, 9
5000
29 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = identifier, clause is false)
stmt s1;
Select s1 such that Modifies(4, "z")
none
5000
30 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = identifier, clause is false)
stmt s1;
Select s1 such that Modifies(6, "y")
none
5000
31 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = _)
assign a;
Select a such that Modifies(1, _)
1, 6, 7, 8
5000
32 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = _)
constant c;
Select c such that Modifies(2, _)
1, 2, 10, 1000, 40231
5000
33 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = _)
prog_line p;
Select p such that Modifies(3, _)
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
34 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = _)
procedure p;
Select p such that Modifies(3, _)
highlight
5000
35 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = _)
stmt s;
Select s such that Modifies(5, _)
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
36 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = _)
read r;
Select r such that Modifies(6, _)
2, 3, 5
5000
37 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = _)
print p;
Select p such that Modifies(7, _)
4, 9
5000
38 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = _, clause is false)
assign a;
Select a such that Modifies(9, _)
none
5000
39 - valid query (1 Modifies clause, independent synonym, stmtRef = integer, entRef = synonym)
procedure p; variable v;
Select p such that Modifies(1, v)
highlight
5000
40 - valid query (1 Modifies clause, independent synonym, stmtRef = stmt, entRef = identifier)
print p; stmt s;
Select p such that Modifies(s, "twice")
4, 9
5000
41 - valid query (1 Modifies clause, independent synonym, stmtRef = stmt, entRef = _)
read r; stmt s;
Select r such that Modifies(s, _)
2, 3, 5
5000
42 - valid query (1 Modifies clause, independent synonym, stmtRef = stmt, entRef = synonym)
assign a; stmt s; variable v;
Select a such that Modifies(s, v)
1, 6, 7, 8
5000
43 - valid query (1 Modifies clause, independent synonym, stmtRef = prog_line, entRef = identifier)
constant c; prog_line p;
Select c such that Modifies(p, "gg")
1, 2, 10, 1000, 40231
5000
44 - valid query (1 Modifies clause, independent synonym, stmtRef = prog_line, entRef = _)
stmt s; prog_line p;
Select s such that Modifies(p, _)
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
45 - valid query (1 Modifies clause, independent synonym, stmtRef = prog_line, entRef = synonym)
prog_line p1, p2; variable v;
Select p1 such that Modifies(p2, v)
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
46 - valid query (1 Modifies clause, independent synonym, stmtRef = read, entRef = identifier)
read r1, r2;
Select r1 such that Modifies(r2, "x")
2, 3, 5
5000
47 - valid query (1 Modifies clause, independent synonym, stmtRef = read, entRef = _)
read r; variable v;
Select v such that Modifies(r, _)
x, y, z, twice, gg, g
5000
48 - valid query (1 Modifies clause, independent synonym, stmtRef = read, entRef = synonym)
read r; variable v1, v2;
Select v1 such that Modifies(r, v2)
x, y, z, twice, gg, g
5000
49 - valid query (1 Modifies clause, independent synonym, stmtRef = assign, entRef = identifier)
assign a1, a2;
Select a1 such that Modifies(a2, "gg")
1, 6, 7, 8
5000
50 - valid query (1 Modifies clause, independent synonym, stmtRef = assign, entRef = _)
assign a1, a2;
Select a1 such that Modifies(a2, _)
1, 6, 7, 8
5000
51 - valid query (1 Modifies clause, independent synonym, stmtRef = assign, entRef = synonym)
procedure p; assign a; variable v;
Select p such that Modifies(a, v)
highlight
5000
52 - valid query (1 Modifies clause, dependent synonym, stmtRef = integer, entRef = synonym)
variable v;
Select v such that Modifies(5, v)
twice
5000
53 - valid query (1 Modifies clause, dependent synonym, stmtRef = stmt, entRef = identifier)
stmt s;
Select s such that Modifies(s, "y")
2, 7
5000
54 - valid query (1 Modifies clause, dependent synonym, stmtRef = stmt, entRef = _)
stmt s;
Select s such that Modifies(s, _)
1, 2, 3, 5, 6, 7, 8
5000
55 - valid query (1 Modifies clause, dependent synonym - select stmt, stmtRef = stmt, entRef = synonym)
stmt s; variable v;
Select s such that Modifies(s, v)
1, 2, 3, 5, 6, 7, 8
5000
56 - valid query (1 Modifies clause, dependent synonym - select variable, stmtRef = stmt, entRef = synonym)
stmt s; variable v;
Select v such that Modifies(s, v)
x, y, twice, z, gg
5000
57 - valid query (1 Modifies clause, dependent synonym, stmtRef = prog_line, entRef = identifier)
prog_line p;
Select p such that Modifies(p, "twice")
5
5000
58 - valid query (1 Modifies clause, dependent synonym, stmtRef = prog_line, entRef = _)
prog_line p;
Select p such that Modifies(p, _)
1, 2, 3, 5, 6, 7, 8
5000
59 - valid query (1 Modifies clause, dependent synonym - select prog_line, stmtRef = prog_line, entRef = synonym)
prog_line p; variable v;
Select p such that Modifies(p, v)
1, 2, 3, 5, 6, 7, 8
5000
60 - valid query (1 Modifies clause, dependent synonym - select variable, stmtRef = prog_line, entRef = synonym)
prog_line p; variable v;
Select v such that Modifies(p, v)
x, y, twice, z, gg
5000
61 - valid query (1 Modifies clause, dependent synonym, stmtRef = read, entRef = identifier)
read r;
Select r such that Modifies(r, "x")
3
5000
62 - valid query (1 Modifies clause, dependent synonym, stmtRef = read, entRef = _)
read r;
Select r such that Modifies(r, _)
2, 3, 5
5000
63 - valid query (1 Modifies clause, dependent synonym - select read, stmtRef = read, entRef = synonym)
read r; variable v;
Select r such that Modifies(r, v)
2, 3, 5
5000
64 - valid query (1 Modifies clause, dependent synonym - select variable, stmtRef = read, entRef = synonym)
read r; variable v;
Select v such that Modifies(r, v)
x, y, twice
5000
65 - valid query (1 Modifies clause, dependent synonym, stmtRef = assign, entRef = identifier)
assign a;
Select a such that Modifies(a, "gg")
8
5000
66 - valid query (1 Modifies clause, dependent synonym, stmtRef = assign, entRef = _)
assign a;
Select a such that Modifies(a, _)
1, 6, 7, 8
5000
67 - valid query (1 Modifies clause, dependent synonym - select assign, stmtRef = assign, entRef = synonym)
assign a; variable v;
Select a such that Modifies(a, v)
1, 6, 7, 8
5000
68 - valid query (1 Modifies clause, dependent synonym - select variable, stmtRef = assign, entRef = synonym)
assign a; variable v;
Select v such that Modifies(a, v)
x, z, y, gg
5000
69 - valid query (1 Uses clause, independent synonym, stmtRef = integer, entRef = identifier)
assign a;
Select a such that Uses(6, "y")
1, 6, 7, 8
5000
70 - valid query (1 Uses clause, independent synonym, stmtRef = integer, entRef = _)
constant c;
Select c such that Uses(8, _)
1, 2, 10, 1000, 40231
5000
71 - valid query (1 Uses clause, independent synonym, stmtRef = integer, entRef = synonym)
variable v1; variable v2;
Select v1 such that Uses(1, v2)
x, y, z, twice, g, gg
5000
72 - valid query (1 Uses clause, independent synonym, stmtRef = stmt, entRef = identifier)
print p; stmt s;
Select p such that Uses(s, "g")
4, 9
5000
73 - valid query (1 Uses clause, independent synonym, stmtRef = stmt, entRef = _)
read r; stmt s;
Select r such that Uses(s, _)
2, 3, 5
5000
74 - valid query (1 Uses clause, independent synonym, stmtRef = stmt, entRef = synonym)
stmt s1, s2; variable v;
Select s1 such that Uses(s2, v)
1, 2, 3, 4, 5, 6, 7, 8, 9
5000 
75 - valid query (1 Uses clause, independent synonym, stmtRef = prog_line, entRef = identifier)
prog_line p1; prog_line p2;
Select p1 such that Uses(p2, "twice")
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
76 - valid query (1 Uses clause, independent synonym, stmtRef = prog_line, entRef = _)
procedure proc; prog_line p; 
Select proc such that Uses(p, _)
highlight
5000
77 - valid query (1 Uses clause, independent synonym, stmtRef = prog_line, entRef = synonym)
assign a; prog_line p; variable v;
Select a such that Uses(p, v)
1, 6, 7, 8
5000
78 - valid query (1 Uses clause, independent synonym, stmtRef = print, entRef = identifier)
read r; print p; 
Select r such that Uses(p, "gg")
2, 3, 5
5000
79 - valid query (1 Uses clause, independent synonym, stmtRef = print, entRef = _)
constant c; print p;
Select c such that Uses(p, _)
1, 2, 10, 1000, 40231
5000
80 - valid query (1 Uses clause, independent synonym, stmtRef = print, entRef = synonym)
print p1, p2; variable v;
Select p1 such that Uses(p2, v)
4, 9
5000
81 - valid query (1 Uses clause, independent synonym, stmtRef = assign, entRef = identifier)
stmt s; assign a;
Select s such that Uses(a, "y")
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
82 - valid query (1 Uses clause, independent synonym, stmtRef = assign, entRef = _)
variable v; assign a; 
Select v such that Uses(a, _)
x, y, z, twice, gg, g
5000
83 - valid query (1 Uses clause, independent synonym, stmtRef = assign, entRef = synonym)
procedure p; assign a; variable v;
Select p such that Uses(a, v)
highlight
5000
84 - valid query (1 Uses clause, dependent synonym, stmtRef = integer, entRef = synonym)
variable v;
Select v such that Uses(1, v)
y, z
5000
85 - valid query (1 Uses clause, dependent synonym, stmtRef = stmt, entRef = identifier)
stmt s; 
Select s such that Uses(s, "z")
1, 4
5000
86 - valid query (1 Uses clause, dependent synonym, stmtRef = stmt, entRef = _)
stmt s;
Select s such that Uses(s, _)
1, 4, 6, 8, 9 
5000
87 - valid query (1 Uses clause, dependent synonym - select stmt, stmtRef = stmt, entRef = synonym)
stmt s; variable v;
Select s such that Uses(s, v)
1, 4, 6, 8, 9
5000
88 - valid query (1 Uses clause, dependent synonym - select variable, stmtRef = stmt, entRef = synonym)
stmt s; variable v;
Select v such that Uses(s, v)
y, z, x, twice, g, gg
5000
89 - valid query (1 Uses clause, dependent synonym, stmtRef = prog_line, entRef = identifier)
prog_line p;
Select p such that Uses(p, "y")
1, 6
5000
90 - valid query (1 Uses clause, dependent synonym, stmtRef = prog_line, entRef = _)
prog_line p;
Select p such that Uses(p, _)
1, 4, 6, 8, 9
5000
91 - valid query (1 Uses clause, dependent synonym - select prog_line, stmtRef = prog_line, entRef = synonym)
prog_line p; variable v;
Select p such that Uses(p, v)
1, 4, 6, 8, 9
5000
92 - valid query (1 Uses clause, dependent synonym - select variable, stmtRef = prog_line, entRef = synonym)
prog_line p; variable v;
Select v such that Uses(p, v)
y, z, x, twice, g, gg
5000
93 - valid query (1 Uses clause, dependent synonym, stmtRef = print, entRef = identifier)
print p;
Select p such that Uses(p, "z")
4
5000
94 - valid query (1 Uses clause, dependent synonym, stmtRef = print, entRef = _)
print p;
Select p such that Uses(p, _)
4, 9
5000
95 - valid query (1 Uses clause, dependent synonym - select print, stmtRef = print, entRef = synonym)
print p; variable v;
Select p such that Uses(p, v)
4, 9
5000
96 - valid query (1 Uses clause, dependent synonym - select variable, stmtRef = print, entRef = synonym)
print p; variable v;
Select v such that Uses(p, v)
z, gg
5000
97 - valid query (1 Uses clause, dependent synonym, stmtRef = assign, entRef = identifier)
assign a; 
Select a such that Uses(a, "y")
1, 6
5000
98 - valid query (1 Uses clause, dependent synonym, stmtRef = assign, entRef = _)
assign a;
Select a such that Uses(a, _)
1, 6, 8
5000
99 - valid query (1 Uses clause, dependent synonym - select assign, stmtRef = assign, entRef = synonym)
assign a; variable v;
Select a such that Uses(a, v)
1, 6, 8
5000
100 - valid query (1 Uses clause, dependent synonym - select variable, stmtRef = assign, entRef = synonym)
assign a; variable v;
Select v such that Uses(a, v)
y, z, x, twice, g
5000
101 - valid query (1 pattern clause, independent synonym, entRef = _, expression-spec = _'var_name'_)
assign a1, a2; 
Select a1 pattern a2(_, _" twice "_)
1, 6, 7, 8
5000
102 - valid query (1 pattern clause, independent synonym, entRef = _, expression-spec = _'const_value'_)
prog_line p; assign a; 
Select p pattern a(_, _"40231"_)
1, 2, 3, 4, 5, 6, 7, 8, 9
5000
103 - valid query (1 pattern clause, independent synonym, entRef = identifier, expression-spec = _'var_name'_)
constant c; assign a;
Select c pattern a("x", _"z"_)
1, 2, 10, 1000, 40231
5000
104 - valid query (1 pattern clause, independent synonym, entRef = identifier, expression-spec = _'const_value'_)
read r; assign a; 
Select r pattern a("gg", _"g    "_)
2, 3, 5
5000
105 - valid query (1 pattern clause, independent synonym, entRef = synonym, expression-spec = _'var_name'_)
print pattern; assign a; variable v;
Select pattern pattern a(v, _"x"_)
4, 9
5000
106 - valid query (1 pattern clause, independent synonym, entRef = synonym, expression-spec = _'const_value'_)
assign a1, a2; variable v;
Select a1 pattern a2(v, _"10"_)
1, 6, 7, 8
5000
107 - valid query (1 pattern clause, dependent synonym, entRef = _, expression-spec = _'var_name'_)
assign a;
Select a pattern a(_, _" y "_)
1, 6
5000
108 - valid query (1 pattern clause, dependent synonym, entRef = _, expression-spec = _'const_value'_)
assign a;
Select a pattern a(_, _"1"_)
6
5000
109 - valid query (1 pattern clause, dependent synonym, entRef = identifier, expression-spec = _'var_name'_)
assign a;
Select a pattern a("z", _"twice"_)
6
5000
110 - valid query (1 pattern clause, dependent synonym, entRef = identifier, expression-spec = _'const_value'_)
assign a;
Select a pattern a("x", _"2"_)
1
5000
111 - valid query (1 pattern clause, dependent synonym - select assign, entRef = synonym, expression-spec = _'var_name'_)
assign a; variable v;
Select a pattern a(v, _"y"_)
1, 6
5000
112 - valid query (1 pattern clause, dependent synonym - select variable, entRef = synonym, expression-spec = _'var_name'_)
assign a; variable v;
Select v pattern a(v, _"y"_)
x, z
5000
113 - valid query (1 pattern clause, dependent synonym - select assign, entRef = synonym, expression-spec = _'const_value'_)
assign a; variable v;
Select a pattern a(v, _"10"_)
7
5000
114 - valid query (1 pattern clause, dependent synonym - select variable, entRef = synonym, expression-spec = _'const_value'_)
assign a; variable v;
Select v pattern a(v, _"1000"_)
x
5000
115 - invalid query (1 Modifies clause, stmtRef = _) 
stmt s; variable v;
Select s such that Modifies(_, v)
none
5000
116 - invalid query (1 Modifies clause, 1 parameter)
print p; variable v;
Select p such that Modifies(v)
none
5000
117 - invalid query (1 Modifies clause, >2 parameters)
read r;
Select r such that Modifies(1, "x", "twice")
none
5000
118 - invalid query (1 Uses clause, stmtRef = _) 
stmt s; variable v;
Select s such that Uses(_, v)
none
5000
119 - invalid query (1 Uses clause, 1 parameter)
print p; variable v;
Select p such that Uses(v)
none
5000
120 - invalid query (1 Uses clause, >2 parameters)
read r;
Select r such that Uses(1, "x", "twice")
none
5000
121 - valid query (1 pattern clause, entRef = synonym, expression-spec = _'var_name'_, clause is false)
variable v1, v2; assign a;
Select v1 pattern a(v2, _"rr"_)
none
5000
122 - valid query (1 pattern clause, entRef = synonym, expression-spec = _'const_value'_, clause is false)
variable v1, v2; assign a;
Select v1 pattern a(v2, _"7"_)
none
5000
123 - valid query (1 pattern clause, entRef = _, expression-spec = _'var_name'_, clause is false)
variable v1; assign a;
Select v1 pattern a(_, _"call"_)
none
5000
124 - valid query (1 pattern clause, entRef = _, expression-spec = _'const_value'_, clause is false)
variable v1; assign a;
Select v1 pattern a(_, _"65"_)
none
5000
125 - valid query (1 pattern clause, entRef = identifier, expression-spec = _'var_name'_, clause is false)
variable v1; assign a;
Select v1 pattern a("y", _"x"_)
none
5000
126 - valid query (1 pattern clause, entRef = identifier, expression-spec = _'const_value'_, clause is false)
variable v1; assign a;
Select v1 pattern a("z", _"11"_)
none
5000