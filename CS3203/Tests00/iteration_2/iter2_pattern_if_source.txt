procedure main
{
    IZone= randOM / (8 + b2st % ydj ) - 11 + bp * bb;                   \\ 1 

    bb = gg - 6 % randOM;                                               \\ 2

    while (d < one) {                                                   \\ 3
        if (!( (b2st <= 0) && (a != c) )) then {                        \\ 4
            id = id - 1;                                                \\ 5
        } else {
            print x;                                                    \\ 6
            while (celebrate != btob) {                                 \\ 7
                lithium = I - (k + helium2 * heart);                    \\ 8
                read randOM;                                            \\ 9
            }
        }
        while (beta >= 11) {                                            \\ 10
            if ( (6 >= ydj) && (!(c == IZone)) ) then {                 \\ 11
                if ( gamma != RAY ) then {                              \\ 12
                    p = a % c1 + 1 ;                                    \\ 13
                } else {
                    print ydj;                                          \\ 14
                    while ( !(id <= 22) ) {                             \\ 15
                        read one;                                       \\ 16
                    }
                    y = 1;                                              \\ 17
                }
                one = one - 2;                                          \\ 18
            } else {
                read x;                                                 \\ 19
                read y;                                                 \\ 20
                print x;                                                \\ 21
                y = (y % 7 + 23 * 11) / (100 - x);                      \\ 22
            } 
        }

        while ((c <= 0) && ((alpha > 11) || (b % ydj + 10 != alpha)) )  {  \\ 23
            c = 1000;                                                       \\ 24
            print one;                                                      \\ 25
            bb = beta + l  / btob + RAY;                                    \\ 26
        }
    }
    read bp;                                                                \\ 27
}
 
procedure ONE {
    if (d < one) then {                                             \\ 28 
        if (count <= x) then {                                      \\ 29
            call TWO;                                               \\ 30
        } else {
            y = (d - d * (a + c + 21)) % (b - b / 14);              \\ 31
        }
    } else {
        if (sum < 21) then {                                        \\ 32
            print sum;                                              \\ 33
        } else {
            count = count + 1;                                      \\ 34
            f = ring + 4 + g * a * 2 * 1 + shine;                   \\ 35
        }
    }
    read r;                                                         \\ 36
    read x;                                                         \\ 37
    x = x + 200;                                                    \\ 38
    print r;                                                        \\ 39
}

procedure TWO {
    while ((c <= 0) && ((alpha > 11) || (b % y + 10 != alpha)) )    \\ 40
    {
        a = f + y + z + sum * sum / f + x;                          \\ 41
        if ((x >= 100) && (x < 1)) then {                           \\ 42
            x = x % 10;                                             \\ 43
        } else {                    
            x = v + x * y + z * t;                                  \\ 44
        }
    }
}

procedure THREE {
    read y;                                                         \\ 45
    ring = shine * 2;                                               \\ 46
    call main;                                                      \\ 47
    if (a != shine) then {                                          \\ 48   
        print y;                                                    \\ 49
        while (lost == a) {                                         \\ 50
            lost = lost - 1;                                        \\ 51
            w = a + lost;                                           \\ 52
            shine = i + ring;                                       \\ 53
        }
        d  = (shine + 12) * (lost + 13);                            \\ 54
        read shine;                                                 \\ 55
        print a;                                                    \\ 56
    } else {
        if (lost != c) then {                                       \\ 57
            f = f - 71 * 88;                                        \\ 58
            c = 1;                                                  \\ 59
        } else {
            while (6 < x + 1 - 8) {                                 \\ 60
                read f;                                             \\ 61
                print z;                                            \\ 62
                y = f + 6 + 1;                                      \\ 63
                print y;                                            \\ 64
            }   
        }
    }
}

procedure FOUR {
    while (x + y - z != test) {                                     \\ 65
        x = (test + 102 % (x * y) - 11) / z;                        \\ 66
        read test;                                                  \\ 67
        y = y + z + 1;                                              \\ 68
        print z;                                                    \\ 69
        if (z > 1) then {                                           \\ 70
            call main;                                              \\ 71
        } else {    
            print test;                                             \\ 72
        }
        while (x - 1 <= y + 21) {                                   \\ 73
            print x;                                                \\ 74
            y = y - 1;                                              \\ 75
            print y;                                                \\ 76
            read a;                                                 \\ 77
        }
    }
}