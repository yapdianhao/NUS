1 - Select Tuple 1 clause each
stmt s1, s2; assign a;
Select <s1, a> such that Affects(s2, a) with a.stmt# = 4 pattern a(_, _"7 / i"_)
1 4, 2 4, 3 4, 4 4, 5 4, 6 4, 7 4, 8 4, 9 4, 10 4, 11 4
5000
2 - Select BOOLEAN 1 clause each
procedure p; variable v; if ifs;
Select BOOLEAN such that Uses(p, v) pattern ifs(v, _, _) with p.procName = "procedureA"
true
5000
3 - Select SingleElement 1 clause each
stmt s1, s2; assign a;
Select s2 with s1.stmt# = 5 such that Parent(s2, s1) pattern a(_, _)
3
5000
4 - Select Tuple 2 clauses each
procedure p; variable v; assign a; if ifs; 
Select <p, v> with p.procName = "procedureA" such that Uses(p, v) with v.varName = "v" pattern a(_, _"7 / i * 6"_) pattern ifs(_, _, _) such that Modifies(1, "i")
procedureA v
5000
5 - Select BOOLEAN 2 clauses each
procedure p; call c; variable v;
Select BOOLEAN with p.procName = "procedureB" and 4 = 4 such that Uses(p, v)
true
5000
6 - Select SingleElement 2 clauses each
call c1; assign a; if ifs;
Select c1 pattern ifs(_, _, _) with c1.procName = "procedureA" with c1.procName = "procedureA" pattern a("a", _"4"_) such that Follows(7, 8) such that Next*(1, a)
7, 11
5000
7 - Select Tuple 2 pattern clauses 1 with 1 such that
if ifs; assign a;
Select <a, ifs> pattern a("i", _) with a.stmt# = 1 pattern ifs("c", _, _) such that Follows*(a, ifs)
1 3
5000
8 - Select BOOLEAN 2 with clauses 1 pattern 1 such that
assign a; stmt s;
Select BOOLEAN with 4 = 5 such that Next*(a, s) with s.stmt# = 4 pattern a(_, _)
false
5000
9 - Select SingleElement 2 such that clauses 1 with 1 pattern
assign a1; variable v1, v2; if ifs; procedure p;
Select a1 such that Uses(a1, v1) and Modifies(a1, v2) with p.procName = "procedureA" pattern ifs("c", _, _)
1, 4, 9
5000
10 - Select Tuple 3 clauses each
if ifs; stmt s1, s2; assign a;
Select <s1, s2> such that Affects(s1, s2) with s1.stmt# = 1 pattern ifs("c", _ , _) with s2.stmt# = 4 such that Next*(s1, s2) and Next(3, s2) with ifs.stmt# = 3 pattern ifs("c", _ , _) pattern a("a", _)
1 4
5000
11 - Select SingleElement 2 such that clauses 1 with 1 pattern
assign a1; variable v1, v2; if ifs; procedure p;
Select a1 such that Uses(a1, v1) and Modifies(a1, v2) with p.procName = "procedureA" pattern ifs("c", _, _)
1, 4, 9
5000