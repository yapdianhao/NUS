1 - Select BOOLEAN Calls and Next
procedure p1, p2; prog_line n1, n2;
Select BOOLEAN such that Calls(p1, p2) and Next(n1, n2)
true
5000
2 - Select BOOLEAN Calls and NextT
procedure p; prog_line n1, n2;
Select BOOLEAN such that Calls(p, p) and Next*(n1, n2)
false
5000
3 - Select BOOLEAN CallsT and Next
procedure p1, p2; prog_line n;
Select BOOLEAN such that Calls*(p1, p2) and Next(n, n)
false
5000
4 - Select BOOLEAN CallsT and NextT
procedure p1, p2; prog_line n1, n2;
Select BOOLEAN such that Calls*(p1, p2) and Next*(n1, n2)
true
5000
5 - Select BOOLEAN Calls and Follows
procedure p1, p2; stmt s1, s2;
Select BOOLEAN such that Calls(p1, p2) and Follows(s1, s2)
true
5000
6 - Select BOOLEAN Calls and FollowsT
procedure p1, p2; stmt s;
Select BOOLEAN such that Calls(p1, p2) and Follows*(s, s)
false
5000
7 - Select BOOLEAN CallsT and Follows
procedure p1, p2; assign a1, a2;
Select BOOLEAN such that Calls*(p1, p2) and Follows(a1, a2)
true
5000
8 - Select BOOLEAN CallsT and FollowsT
procedure p1, p2; assign a;
Select BOOLEAN such that Calls*(p1, p2) and Follows*(a, a)
false
5000
9 - Select BOOLEAN Calls and Parent
procedure p1, p2; if ifs; print p;
Select BOOLEAN such that Calls(p1, p2) and Parent(ifs, p)
true
5000
10 - Select BOOLEAN Calls and ParentT
procedure p1, p2; if ifs; assign a;
Select BOOLEAN such that Calls(p1, p2) and Parent*(ifs, a)
true
5000
11 - Select BOOLEAN CallsT and Parent
procedure p1, p2; if ifs; call c;
Select BOOLEAN such that Calls*(p1, p2) and Parent(ifs, c)
true
5000
12 - Select BOOLEAN CallsT and ParentT
procedure p1, p2; if ifs; read r;
Select BOOLEAN such that Calls*(p1, p2) such that Parent*(r, ifs)
false
5000
13 - Select BOOLEAN Next and Follows
stmt s1, s2;
Select BOOLEAN such that Next(3, 4) such that Follows(s1, s2)
true
5000
14 - Select BOOLEAN Next and FollowsT
prog_line n; assign a1, a2;
Select BOOLEAN such that Next(2, n) such that Follows*(a1, a2)
true
5000
15 - Select BOOLEAN NextT and Follows
prog_line n1, n2; if ifs; read r;
Select BOOLEAN such that Next*(n1, n2) such that Follows(r, ifs)
false
5000
16 - Select BOOLEAN NextT and FollowsT
prog_line n; print p; read r;
Select BOOLEAN such that Next*(n, 4) such that Follows*(r, p)
false
5000
17 - Select BOOLEAN Next and Parent
prog_line n; if ifs; read r;
Select BOOLEAN such that Next(n, n) such that Parent(r, ifs)
false
5000
18 - Select BOOLEAN Next and ParentT
prog_line n; if ifs; read r;
Select BOOLEAN such that Next(n, _) such that Parent*(ifs, r)
false
5000
19 - Select BOOLEAN NextT and Parent
prog_line n; if ifs; print p;
Select BOOLEAN such that Next*(_, n) such that Parent(ifs, p)
true
5000
20 - Select BOOLEAN NextT and ParentT
if ifs; print p;
Select BOOLEAN such that Next*(_, 5) such that Parent*(ifs, p)
true
5000
21 - Select BOOLEAN Follows and Parent

Select BOOLEAN such that Follows(4, 5) such that Parent(3, 4)
true
5000
22 - Select BOOLEAN Follows and ParentT

Select BOOLEAN such that Follows(4, _) such that Parent*(3, _)
true
5000
23 - Select BOOLEAN FollowsT and Parent

Select BOOLEAN such that Follows*(_, 5) such that Parent(3, 4)
true
5000
24 - Select BOOLEAN FollowsT and ParentT

Select BOOLEAN such that Follows*(4, 5) such that Parent*(_, 3)
false
5000
25 - Select BOOLEAN Calls and UsesS
stmt s; variable v;
Select BOOLEAN such that Calls("proc1", _) such that Uses(s, v)
true
5000
26 - Select BOOLEAN Calls and UsesP
procedure p; variable v;
Select BOOLEAN such that Calls(_, "proc3") and Uses(p, v)
true
5000
27 - Select BOOLEAN CallsT and UsesS
stmt s; variable v;
Select BOOLEAN such that Calls*(_, _) and Uses(s, v)
true
5000
28 - Select BOOLEAN CallsT and UsesP
procedure p1, p2;
Select BOOLEAN such that Calls*(p1, p2) and Uses(p1, _)
true
5000
29 - Select BOOLEAN Calls and ModifiesS
stmt s; procedure p1, p2;
Select BOOLEAN such that Calls(p1, p2) and Modifies(s, _)
true
5000
30 - Select BOOLEAN Calls and ModifiesP
procedure p; variable v;
Select BOOLEAN such that Calls(p, p) and Modifies(p, v)
false
5000
31 - Select BOOLEAN CallsT and ModifiesS
procedure p1, p2;
Select BOOLEAN such that Calls*(p1, p2) and Modifies(3, "g")
true
5000
32 - Select BOOLEAN CallsT and ModifiesP
procedure p1, p2; variable v;
Select BOOLEAN such that Calls*(p1, p2) and Modifies("proc1", v)
true
5000
33 - Select Tuple Calls and UsesS
procedure p; stmt s; variable v;
Select <s, v> such that Calls(_, p) and Uses(s, v)
2 c, 2 d, 2 e, 3 c, 5 d, 8 h, 3 f, 3 g, 3 d, 3 a, 3 h, 4 f, 4 g, 6 d, 6 a, 6 h, 7 d, 7 a, 10 h
5000
34 - Select Tuple Calls and UsesP
procedure p; variable v;
Select <p, v> such that Calls(p, _) and Uses(p, v)
proc1 c, proc1 d, proc1 e, proc1 f, proc1 g, proc1 a, proc1 h, proc2 d, proc2 a, proc2 h
5000
35 - Select Tuple CallsT and UsesS
stmt s; variable v;
Select <s, v> such that Calls*(_, _) such that Uses(s, v)
2 c, 2 d, 2 e, 3 c, 5 d, 8 h, 3 f, 3 g, 3 d, 3 a, 3 h, 4 f, 4 g, 6 d, 6 a, 6 h, 7 d, 7 a, 10 h
5000
36 - Select Tuple CallsT and UsesP
stmt s; variable v; procedure p;
Select <p, v> such that Calls*(_, p) and Uses(p, v)
proc2 d, proc2 a, proc2 h, proc3 h
5000
37 - Select Tuple CallsT and ModifiesS
procedure p; stmt s; variable v;
Select <s, v> such that Calls*(p, _) and Modifies(s, v)
1 a, 2 b, 3 e, 3 c, 3 i, 3 g, 4 e, 6 c, 6 i, 6 g, 7 c, 8 i, 8 g, 9 i, 10 g
5000
38 - Select Tuple CallsT and ModifiesP
procedure p; variable v;
Select <p, v> such that Calls*(_, _) and Modifies(p, v)
proc1 a, proc1 b, proc1 c, proc1 e, proc1 i, proc1 g, proc2 c, proc2 i, proc2 g, proc3 i, proc3 g
5000
39 - Select Tuple Calls and ModifiesS
stmt s; variable v; procedure p;
Select <p, v> such that Calls(p, _) and Modifies(s, v)
proc1 a, proc1 b, proc1 c, proc1 e, proc1 i, proc1 g, proc2 a, proc2 b, proc2 c, proc2 e, proc2 i, proc2 g
5000
40 - Select Tuple Calls and ModifiesP
procedure p1, p2;
Select <p1, p2> such that Calls(_, p1) and Modifies(p2, _)
proc2 proc1, proc2 proc2, proc2 proc3, proc3 proc1, proc3 proc2, proc3 proc3
5000
41 - Select Tuple CallsT and ModifiesS
stmt s; variable v; procedure p;
Select <p, v> such that Calls*(p, _) and Modifies(s, v)
proc1 a, proc1 b, proc1 c, proc1 e, proc1 i, proc1 g, proc2 a, proc2 b, proc2 c, proc2 e, proc2 i, proc2 g
5000
42 - Select Tuple CallsT and ModifiesP
procedure p1, p2; variable v;
Select <p2, v> such that Calls*(p1, p2) and Modifies(p2, v)
proc2 c, proc2 i, proc2 g, proc3 i, proc3 g
5000
43 - Select Tuple Calls and Affects
procedure p1, p2; stmt s1, s2;
Select <p1, p2, s1, s2> such that Calls(p1, p2) and Affects(s1, s2)
none
5000
44 - Select Tuple Calls and AffectsT
stmt s1, s2;
Select <s1, s2> such that Calls(_, _) and Affects*(s1, s2)
none
5000
45 - Select Tuple CallsT and Affects
procedure p1, p2;
Select <p1, p2> such that Calls*(p1, p2) and Affects(_, _)
none
5000
46 - Select Tuple CallsT and AffectsT
procedure p1, p2; stmt s2;
Select <p1, p2> such that Calls*(p1, p2) and Affects*(_, s2)
none
5000
47 - Select Tuple Calls and Affects
procedure p1, p2; stmt s1;
Select <p1, p2, s1> such that Calls(p1, p2) and Affects(s1, _)
none
5000
48 - Select Tuple Calls and AffectsT
procedure p2; stmt s1, s2;
Select <p2, s1, s2> such that Calls(_, p2) and Affects*(2, _)
none
5000
49 - Select Tuple CallsT and Affects
procedure p1; stmt s1, s2;
Select <p1, s1, s2> such that Calls(p1, _) and Affects(_, 4)
none
5000
50 - Select Tuple CallsT and AffectsT
procedure p1, p2; stmt s1, s2;
Select <p1, p2> such that Calls(p1, p2) and Affects*(s1, s2)
none
5000
51 - Select Tuple Calls and Next
procedure p1, p2; prog_line n1, n2;
Select <p1, p2> such that Calls(p1, p2) and Next(n1, n2)
proc1 proc2, proc2 proc3
5000
52 - Select Tuple Calls and NextT
procedure p; prog_line n1, n2;
Select <p, n1, n2> such that Calls(p, p) and Next*(n1, n2)
none
5000
53 - Select Tuple CallsT and Next
procedure p1, p2; prog_line n;
Select <p1, p2, n> such that Calls*(p1, p2) and Next(n, n)
none
5000
54 - Select Tuple CallsT and NextT
procedure p1, p2; prog_line n1, n2;
Select <p1, p2, n1, n2> such that Calls*(p1, p2) and Next*(n1, n2)
proc1 proc2 1 2, proc1 proc2 1 3, proc1 proc2 1 4, proc1 proc2 1 5, proc1 proc2 2 3, proc1 proc2 2 4, proc1 proc2 2 5, proc1 proc2 1 6, proc1 proc2 2 6, proc1 proc2 4 5, proc1 proc2 7 8, proc1 proc2 9 10, proc1 proc2 3 4, proc1 proc2 3 5, proc1 proc2 3 6, proc2 proc3 1 2, proc2 proc3 1 3, proc2 proc3 1 4, proc2 proc3 1 5, proc2 proc3 2 3, proc2 proc3 2 4, proc2 proc3 2 5, proc2 proc3 1 6, proc2 proc3 2 6, proc2 proc3 4 5, proc2 proc3 7 8, proc2 proc3 9 10, proc2 proc3 3 4, proc2 proc3 3 5, proc2 proc3 3 6, proc1 proc3 1 2, proc1 proc3 1 3, proc1 proc3 1 4, proc1 proc3 1 5, proc1 proc3 2 3, proc1 proc3 2 4, proc1 proc3 2 5, proc1 proc3 1 6, proc1 proc3 2 6, proc1 proc3 4 5, proc1 proc3 7 8, proc1 proc3 9 10, proc1 proc3 3 4, proc1 proc3 3 5, proc1 proc3 3 6
5000
55 - Select Tuple Calls and Follows
procedure p1, p2; stmt s1, s2;
Select <p1, p2, s1, s2> such that Calls(p1, p2) and Follows(s1, s2)
proc1 proc2 1 2, proc1 proc2 2 3, proc1 proc2 4 5, proc1 proc2 7 8, proc1 proc2 9 10, proc2 proc3 1 2, proc2 proc3 2 3, proc2 proc3 4 5, proc2 proc3 7 8, proc2 proc3 9 10
5000
56 - Select Tuple Calls and FollowsT
procedure p1, p2; stmt s;
Select <p1, p2, s> such that Calls(p1, p2) and Follows*(s, s)
none
5000
57 - Select Tuple CallsT and Follows
procedure p1, p2; assign a1, a2;
Select <p1, p2, a1, a2> such that Calls*(p1, p2) and Follows(a1, a2)
proc1 proc2 9 10, proc2 proc3 9 10, proc1 proc3 9 10
5000
58 - Select Tuple CallsT and FollowsT
procedure p1, p2; assign a;
Select <p1, p2, a> such that Calls*(p1, p2) and Follows*(a, a)
none
5000
59 - Select Tuple Calls and Parent
procedure p1, p2; if ifs; print pr;
Select <p2, ifs, pr> such that Calls(p1, p2) and Parent(ifs, pr)
proc2 3 5, proc3 3 5
5000
60 - Select Tuple Calls and ParentT
procedure p1, p2; if ifs; assign a;
Select <p1, p2, ifs, a> such that Calls(p1, p2) and Parent*(ifs, a)
proc1 proc2 3 4, proc2 proc3 3 4
5000
61 - Select Tuple CallsT and Parent
procedure p1, p2; if ifs; call c;
Select <p1, p2, ifs, c> such that Calls*(p1, p2) and Parent(ifs, c)
proc1 proc2 3 6, proc2 proc3 3 6, proc1 proc3 3 6
5000
62 - Select Tuple CallsT and ParentT
procedure p1, p2; if ifs; read r;
Select <r, ifs> such that Calls*(p1, p2) and Parent*(r, ifs)
none
5000
63 - Select Tuple Next and Follows
stmt s1, s2;
Select <s1, s2> such that Next(3, 4) such that Follows(s1, s2)
1 2, 2 3, 4 5, 7 8, 9 10
5000
64 - Select Tuple Next and FollowsT
prog_line n; assign a1, a2;
Select <n, a2> such that Next(2, n) such that Follows*(n, a2)
none
5000
65 - Select Tuple NextT and Follows
prog_line n1, n2; if ifs; stmt s;
Select <n1, n2, ifs> such that Next*(n1, n2) such that Follows(s, ifs)
1 2 3, 1 3 3, 1 4 3, 1 5 3, 2 3 3, 2 4 3, 2 5 3, 1 6 3, 2 6 3, 4 5 3, 7 8 3, 9 10 3, 3 4 3, 3 5 3, 3 6 3
5000
66 - Select Tuple NextT and FollowsT
prog_line n; print p;
Select <n, p> such that Next*(n, 4) such that Follows*(n, p)
none
5000
67 - Select Tuple Next and Parent
prog_line n; print p; read r;
Select <n, r, p> such that Next(n, n) such that Parent(p, r)
none
5000
68 - Select Tuple Next and ParentT
prog_line n; if ifs; stmt s;
Select <n, ifs, s> such that Next(n, _) such that Parent*(ifs, s)
1 3 4, 1 3 5, 1 3 6, 2 3 4, 2 3 5, 2 3 6, 3 3 4, 3 3 5, 3 3 6, 4 3 4, 4 3 5, 4 3 6, 7 3 4, 7 3 5, 7 3 6, 9 3 4, 9 3 5, 9 3 6
5000
69 - Select Tuple NextT and Parent
prog_line n; stmt s;
Select <n, s> such that Next*(_, n) such that Parent(s, n)
4 3, 5 3, 6 3
5000
70 - Select Tuple NextT and ParentT
if ifs; read r;
Select <r, p> such that Next*(_, 7) such that Parent*(ifs, 4)
none
5000
71 - Select Tuple Follows and Parent
stmt s;
Select <s, s> such that Follows(4, 5) such that Parent(3, 4)
1 1, 2 2, 3 3, 4 4, 5 5, 6 6, 7 7, 8 8, 9 9, 10 10
5000
72 - Select Tuple Follows and ParentT
read r; call c;
Select <r, c> such that Follows(4, _) such that Parent*(3, _)
1 6, 1 8
5000
73 - Select Tuple FollowsT and Parent
assign a1, a2;
Select <a1, a2> such that Follows*(_, 5) such that Parent(3, 4)
2 2, 2 4, 2 7, 2 9, 2 10, 4 2, 4 4, 4 7, 4 9, 4 10, 7 2, 7 4, 7 7, 7 9, 7 10, 9 2, 9 4, 9 7, 9 9, 9 10, 10 2, 10 4, 10 7, 10 9, 10 10
5000
74 - Select Tuple 3 relationships
procedure p1, p2; variable v; stmt s1, s2;
Select <p1, v, p2, s1, s2> such that Uses(p1, v) such that Parent(s1, s2) and Calls(p1, p2)
proc1 c proc2 3 4, proc1 c proc2 3 5, proc1 c proc2 3 6, proc1 d proc2 3 4, proc1 d proc2 3 5, proc1 d proc2 3 6, proc1 e proc2 3 4, proc1 e proc2 3 5, proc1 e proc2 3 6, proc1 f proc2 3 4, proc1 f proc2 3 5, proc1 f proc2 3 6, proc1 g proc2 3 4, proc1 g proc2 3 5, proc1 g proc2 3 6, proc1 a proc2 3 4, proc1 a proc2 3 5, proc1 a proc2 3 6, proc1 h proc2 3 4, proc1 h proc2 3 5, proc1 h proc2 3 6, proc2 d proc3 3 4, proc2 d proc3 3 5, proc2 d proc3 3 6, proc2 a proc3 3 4, proc2 a proc3 3 5, proc2 a proc3 3 6, proc2 h proc3 3 4, proc2 h proc3 3 5, proc2 h proc3 3 6
5000
75 - Select Tuple 4 relationships
stmt s; variable v; prog_line n1, n2; procedure p1, p2;
Select <s, v, n1, n2, p1, p2> such that Modifies(s, v) and Next(n1, n2) such that Calls("proc1", "proc2") and Calls(p1, p2)
1 a 1 2 proc1 proc2, 1 a 1 2 proc2 proc3, 1 a 2 3 proc1 proc2, 1 a 2 3 proc2 proc3, 1 a 3 4 proc1 proc2, 1 a 3 4 proc2 proc3, 1 a 4 5 proc1 proc2, 1 a 4 5 proc2 proc3, 1 a 3 6 proc1 proc2, 1 a 3 6 proc2 proc3, 1 a 7 8 proc1 proc2, 1 a 7 8 proc2 proc3, 1 a 9 10 proc1 proc2, 1 a 9 10 proc2 proc3, 2 b 1 2 proc1 proc2, 2 b 1 2 proc2 proc3, 2 b 2 3 proc1 proc2, 2 b 2 3 proc2 proc3, 2 b 3 4 proc1 proc2, 2 b 3 4 proc2 proc3, 2 b 4 5 proc1 proc2, 2 b 4 5 proc2 proc3, 2 b 3 6 proc1 proc2, 2 b 3 6 proc2 proc3, 2 b 7 8 proc1 proc2, 2 b 7 8 proc2 proc3, 2 b 9 10 proc1 proc2, 2 b 9 10 proc2 proc3, 3 e 1 2 proc1 proc2, 3 e 1 2 proc2 proc3, 3 e 2 3 proc1 proc2, 3 e 2 3 proc2 proc3, 3 e 3 4 proc1 proc2, 3 e 3 4 proc2 proc3, 3 e 4 5 proc1 proc2, 3 e 4 5 proc2 proc3, 3 e 3 6 proc1 proc2, 3 e 3 6 proc2 proc3, 3 e 7 8 proc1 proc2, 3 e 7 8 proc2 proc3, 3 e 9 10 proc1 proc2, 3 e 9 10 proc2 proc3, 4 e 1 2 proc1 proc2, 4 e 1 2 proc2 proc3, 4 e 2 3 proc1 proc2, 4 e 2 3 proc2 proc3, 4 e 3 4 proc1 proc2, 4 e 3 4 proc2 proc3, 4 e 4 5 proc1 proc2, 4 e 4 5 proc2 proc3, 4 e 3 6 proc1 proc2, 4 e 3 6 proc2 proc3, 4 e 7 8 proc1 proc2, 4 e 7 8 proc2 proc3, 4 e 9 10 proc1 proc2, 4 e 9 10 proc2 proc3, 3 c 1 2 proc1 proc2, 3 c 1 2 proc2 proc3, 3 c 2 3 proc1 proc2, 3 c 2 3 proc2 proc3, 3 c 3 4 proc1 proc2, 3 c 3 4 proc2 proc3, 3 c 4 5 proc1 proc2, 3 c 4 5 proc2 proc3, 3 c 3 6 proc1 proc2, 3 c 3 6 proc2 proc3, 3 c 7 8 proc1 proc2, 3 c 7 8 proc2 proc3, 3 c 9 10 proc1 proc2, 3 c 9 10 proc2 proc3, 6 c 1 2 proc1 proc2, 6 c 1 2 proc2 proc3, 6 c 2 3 proc1 proc2, 6 c 2 3 proc2 proc3, 6 c 3 4 proc1 proc2, 6 c 3 4 proc2 proc3, 6 c 4 5 proc1 proc2, 6 c 4 5 proc2 proc3, 6 c 3 6 proc1 proc2, 6 c 3 6 proc2 proc3, 6 c 7 8 proc1 proc2, 6 c 7 8 proc2 proc3, 6 c 9 10 proc1 proc2, 6 c 9 10 proc2 proc3, 7 c 1 2 proc1 proc2, 7 c 1 2 proc2 proc3, 7 c 2 3 proc1 proc2, 7 c 2 3 proc2 proc3, 7 c 3 4 proc1 proc2, 7 c 3 4 proc2 proc3, 7 c 4 5 proc1 proc2, 7 c 4 5 proc2 proc3, 7 c 3 6 proc1 proc2, 7 c 3 6 proc2 proc3, 7 c 7 8 proc1 proc2, 7 c 7 8 proc2 proc3, 7 c 9 10 proc1 proc2, 7 c 9 10 proc2 proc3, 3 i 1 2 proc1 proc2, 3 i 1 2 proc2 proc3, 3 i 2 3 proc1 proc2, 3 i 2 3 proc2 proc3, 3 i 3 4 proc1 proc2, 3 i 3 4 proc2 proc3, 3 i 4 5 proc1 proc2, 3 i 4 5 proc2 proc3, 3 i 3 6 proc1 proc2, 3 i 3 6 proc2 proc3, 3 i 7 8 proc1 proc2, 3 i 7 8 proc2 proc3, 3 i 9 10 proc1 proc2, 3 i 9 10 proc2 proc3, 6 i 1 2 proc1 proc2, 6 i 1 2 proc2 proc3, 6 i 2 3 proc1 proc2, 6 i 2 3 proc2 proc3, 6 i 3 4 proc1 proc2, 6 i 3 4 proc2 proc3, 6 i 4 5 proc1 proc2, 6 i 4 5 proc2 proc3, 6 i 3 6 proc1 proc2, 6 i 3 6 proc2 proc3, 6 i 7 8 proc1 proc2, 6 i 7 8 proc2 proc3, 6 i 9 10 proc1 proc2, 6 i 9 10 proc2 proc3, 3 g 1 2 proc1 proc2, 3 g 1 2 proc2 proc3, 3 g 2 3 proc1 proc2, 3 g 2 3 proc2 proc3, 3 g 3 4 proc1 proc2, 3 g 3 4 proc2 proc3, 3 g 4 5 proc1 proc2, 3 g 4 5 proc2 proc3, 3 g 3 6 proc1 proc2, 3 g 3 6 proc2 proc3, 3 g 7 8 proc1 proc2, 3 g 7 8 proc2 proc3, 3 g 9 10 proc1 proc2, 3 g 9 10 proc2 proc3, 8 i 1 2 proc1 proc2, 8 i 1 2 proc2 proc3, 8 i 2 3 proc1 proc2, 8 i 2 3 proc2 proc3, 8 i 3 4 proc1 proc2, 8 i 3 4 proc2 proc3, 8 i 4 5 proc1 proc2, 8 i 4 5 proc2 proc3, 8 i 3 6 proc1 proc2, 8 i 3 6 proc2 proc3, 8 i 7 8 proc1 proc2, 8 i 7 8 proc2 proc3, 8 i 9 10 proc1 proc2, 8 i 9 10 proc2 proc3, 8 g 1 2 proc1 proc2, 8 g 1 2 proc2 proc3, 8 g 2 3 proc1 proc2, 8 g 2 3 proc2 proc3, 8 g 3 4 proc1 proc2, 8 g 3 4 proc2 proc3, 8 g 4 5 proc1 proc2, 8 g 4 5 proc2 proc3, 8 g 3 6 proc1 proc2, 8 g 3 6 proc2 proc3, 8 g 7 8 proc1 proc2, 8 g 7 8 proc2 proc3, 8 g 9 10 proc1 proc2, 8 g 9 10 proc2 proc3, 9 i 1 2 proc1 proc2, 9 i 1 2 proc2 proc3, 9 i 2 3 proc1 proc2, 9 i 2 3 proc2 proc3, 9 i 3 4 proc1 proc2, 9 i 3 4 proc2 proc3, 9 i 4 5 proc1 proc2, 9 i 4 5 proc2 proc3, 9 i 3 6 proc1 proc2, 9 i 3 6 proc2 proc3, 9 i 7 8 proc1 proc2, 9 i 7 8 proc2 proc3, 9 i 9 10 proc1 proc2, 9 i 9 10 proc2 proc3, 6 g 1 2 proc1 proc2, 6 g 1 2 proc2 proc3, 6 g 2 3 proc1 proc2, 6 g 2 3 proc2 proc3, 6 g 3 4 proc1 proc2, 6 g 3 4 proc2 proc3, 6 g 4 5 proc1 proc2, 6 g 4 5 proc2 proc3, 6 g 3 6 proc1 proc2, 6 g 3 6 proc2 proc3, 6 g 7 8 proc1 proc2, 6 g 7 8 proc2 proc3, 6 g 9 10 proc1 proc2, 6 g 9 10 proc2 proc3, 10 g 1 2 proc1 proc2, 10 g 1 2 proc2 proc3, 10 g 2 3 proc1 proc2, 10 g 2 3 proc2 proc3, 10 g 3 4 proc1 proc2, 10 g 3 4 proc2 proc3, 10 g 4 5 proc1 proc2, 10 g 4 5 proc2 proc3, 10 g 3 6 proc1 proc2, 10 g 3 6 proc2 proc3, 10 g 7 8 proc1 proc2, 10 g 7 8 proc2 proc3, 10 g 9 10 proc1 proc2, 10 g 9 10 proc2 proc3
5000
76 - Select Tuple 5 relationships
variable v1, v2; stmt s1, s2; procedure p;
Select <v1, s1, s2> such that Uses(2, v1) such that Next*(s1, s2) such that Follows*(s1, s2) such that Uses("proc2", v1) such that Modifies(p, v2)
d 1 2, d 1 3, d 2 3, d 4 5, d 7 8, d 9 10
5000
77 - Select Tuple 6 relationships
stmt s1, s2, s3, s4; procedure p1, p2, p3, p4; variable v1, v2, v3;
Select <s1, s2, p1, p2, s3, s4, p3 ,v1, p4, v2, s5, v3> such that Affects*(s1, s2) and Calls*(p1, p2) such that Follows*(s3, s4) such that Uses(p3, v1) and Uses(p4, v2) and Modifies(s5, v3)
none
5000
78 - Select Tuple 7 relationships
procedure p1, p2; stmt s1, s2, s3, s4, s5; variable v;
Select <p1, p2, s1, s2, s3, s4, s5> such that Calls*(p1, p2) and Follows*(s3, s2) such that Uses(s1, v) and Parent*(s1, s3) and Next(s3, s2) and Next*(s3, s5) such that Follows(s3, s4)
proc1 proc2 3 5 4 5 5, proc2 proc3 3 5 4 5 5, proc1 proc3 3 5 4 5 5
5000
79 - Select Tuple 8 relationships
stmt s1, s2, s3, s4; variable v1, v2; procedure p1, p2; assign a1, a2;
Select <s1, s2, p1, v1, v2> such that Uses(p1, v1) such that Follows*(a1, s3) and Modifies(s4, v2) and Affects(a1, a2) such that Calls*(p1, p2) and Modifies(p2, v1) and Affects*(s1, s2) and Parent*(s2, s3)
none
5000
80 - Select Tuple 9 relationships
prog_line n1, n2, n3, n4, n6; procedure p1, p2; assign a1, a2, a3; variable v1, v2; stmt s1, s2;
Select <n1, p1, p2, v2> such that Follows*(n1, n2) and Calls*(p1, p2) and Uses(s1, v1) and Next*(n3, n4) and Follows(a1, s2) and Modifies(p1, v2) and Next*(n1, n6) and Modifies(s1, v2) such that Next(a2, a3)
1 proc1 proc2 b, 1 proc1 proc2 c, 1 proc1 proc2 i, 1 proc1 proc2 g, 1 proc1 proc2 e, 1 proc2 proc3 c, 1 proc2 proc3 i, 1 proc2 proc3 g, 1 proc1 proc3 b, 1 proc1 proc3 c, 1 proc1 proc3 e, 1 proc1 proc3 i, 1 proc1 proc3 g, 2 proc1 proc2 b, 2 proc1 proc2 c, 2 proc1 proc2 i, 2 proc1 proc2 g, 2 proc1 proc2 e, 2 proc2 proc3 c, 2 proc2 proc3 i, 2 proc2 proc3 g, 2 proc1 proc3 b, 2 proc1 proc3 c, 2 proc1 proc3 e, 2 proc1 proc3 i, 2 proc1 proc3 g, 4 proc1 proc2 b, 4 proc1 proc2 c, 4 proc1 proc2 i, 4 proc1 proc2 g, 4 proc1 proc2 e, 4 proc2 proc3 c, 4 proc2 proc3 i, 4 proc2 proc3 g, 4 proc1 proc3 b, 4 proc1 proc3 c, 4 proc1 proc3 e, 4 proc1 proc3 i, 4 proc1 proc3 g, 7 proc1 proc2 b, 7 proc1 proc2 c, 7 proc1 proc2 i, 7 proc1 proc2 g, 7 proc1 proc2 e, 7 proc2 proc3 c, 7 proc2 proc3 i, 7 proc2 proc3 g, 7 proc1 proc3 b, 7 proc1 proc3 c, 7 proc1 proc3 e, 7 proc1 proc3 i, 7 proc1 proc3 g, 9 proc1 proc2 b, 9 proc1 proc2 c, 9 proc1 proc2 i, 9 proc1 proc2 g, 9 proc1 proc2 e, 9 proc2 proc3 c, 9 proc2 proc3 i, 9 proc2 proc3 g, 9 proc1 proc3 b, 9 proc1 proc3 c, 9 proc1 proc3 e, 9 proc1 proc3 i, 9 proc1 proc3 g
5000
81 - Select Tuple 10 relationships
procedure p1, p2; if ifs1; variable v1, v2; while w1, w2; prog_line n1, n2; stmt s1, s2; assign a2;
Select <p1, v1, ifs1, v2> such that Modifies(p1, v1) and Parent(ifs1, s1) such that Affects(s1, a2) and Uses(p2, v1) such that Follows*(s2, s4) and Modifies(s2, v1) such that Modifies(s3, v2) such that Parent*(ifs1, s2) and Follows(a1, ifs1) such that Next(n1, n2)
none
5000
82 - Select BOOLEAN 3 relationships
stmt s1, s2; procedure p1; variable v1; prog_line n1, n2; while w1; assign a1, a2;
Select BOOLEAN such that Affects(a1, a2) such that Uses(p1, v1) such that Next(n1, n2)
false
5000
83 - Select BOOLEAN 4 relationships
procedure p1, p2; stmt s1, s2; if ifs1; variable v;
Select BOOLEAN such that Calls*(p1, p2) such that Next(s1, s2) such that Parent(ifs1, s2) such that Uses(p2, v)
true
5000
84 - Select BOOLEAN 5 relationships
while w1; if ifs1; procedure p1, p2, p3; prog_line n1, n2, n3;
Select BOOLEAN such that Calls(p1, p2) such that Calls(p2, p3) such that Next(n1, n2) such that Next(n2, n3) such that Parent*(w1, ifs1)
false
5000
85 - Select BOOLEAN 6 relationships
procedure p1, p2; variable v1, v2; stmt s1, s2; assign a2; prog_line n1, n2;
Select BOOLEAN such that Uses(p1, v1) such that Modifies(s1, v1) such that Follows(s2, s1) such that Next*(n1, n2) such that Calls(p1, p2) such that Modifies(p2, v2)
true
5000
86 - Select BOOLEAN 7 relationships
assign a1, a2; prog_line n1, n2; procedure p1; variable v1; stmt s1, s2;
Select BOOLEAN such that Affects*(s2, a2) such that Next(n1, n2) such that Modifies(p1, v1) such that Uses(2, "c") such that Affects(s2, a1) such that Follows*(s1, 5) such that Uses(p1, v1)
false
5000
87 - Select BOOLEAN 8 relationships
procedure p1, p2; prog_line n1, n2, n3, n4; stmt s1, s2, s3; variable v1;
Select BOOLEAN such that Parent*(s2, s3) such that Calls("proc1", p2) such that Calls(p1, "proc2") such that Calls("proc1", "proc2") such that Next(n1, n2) such that Next*(n3, n4) such that Modifies(s1, v1) such that Follows(s1, s2)
true
5000
88 - Select BOOLEAN 9 relationships
procedure p1, p2, p3; assign a1, a2, a3; stmt s1, s2, s4; variable v1, v2;
Select BOOLEAN such that Calls*(p1, p2) such that Affects(a1, a2) such that Affects*(a2, a3) such that Modifies(s2, v2) such that Uses(s1, v1) such that Calls(p2, p3) such that Follows(s1, s2) such that Parent*(s1, s4) such that Follows*(s1, s2)
false
5000
89 - Select BOOLEAN 10 relationships
procedure p1, p2; variable v1, v2, v3; if ifs1, ifs2; read r; stmt s1; assign a1;
Select BOOLEAN such that Uses(p1, v2) such that Next(_, _) such that Next(_, 3) such that Follows(a1, _) such that Calls(p1, p2) such that Next(3, 4) such that Uses(p1, v1) such that Parent*(ifs1, s1) such that Modifies(r, v3) such that Uses(p2, v1)
true
5000



